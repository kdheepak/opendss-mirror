Comment: OpenDSS Setup Project
 
[DEFINE REGION: Check Application Requirements]
[END REGION]
 
[DEFINE REGION: Check/Install Application Pre-Requisites]
 
[DEFINE REGION: Check Application Pre-Requisites]
Comment: Check setup pre-requisites
Set Variable PREREQ to FALSE
Set Variable PRELIST to 
[compiler if Variable BUILDMODE not Equals PATCH]
if Variable NEEDSUPGRADE Equals TRUE
  Set Variable PREREQ to TRUE
  Set Variable PRELIST to $PRELIST$$NEWLINE$Previous Version Uninstallation
end
[compiler end]
[END REGION]
 
[DEFINE REGION: Install Application Pre-Requisites]
Comment: Install setup pre-requisites
if Variable PREREQ not Equals FALSE
  Comment: Display Dialog: prereq, wait for dialog to return (modal)
  if Variable WIZARD Equals CANCEL
    Terminate Installation
  end
  Comment: Display Dialog: progressprereq, use as progress dialog (non-modal)
  [compiler if Variable BUILDMODE not Equals PATCH]
  if Variable NEEDSUPGRADE Equals TRUE
    Set Variable REMOVEOLD to 
    Set Variable ERROROLD to 
    Install/Remove MSI Package $PRODUCTCODE$[REMOVE=ALL] (get result into variable REMOVEOLD)
    if Variable REMOVEOLD Equals ERROR
      MessageBox: $TITLE$ Setup, Unable to uninstall old version of $TITLE$. Please uninstall it yourself using Control Panel Add-Remove Programs before attempting to install this product.$NEWLINE$$NEWLINE$$ERROROLD$
      Terminate Installation
    end
    if Variable REMOVEOLD Equals REBOOT
      MessageBox: $TITLE$ Setup, Your computer needs to be restarted before $TITLE$ Setup can continue.$NEWLINE$$NEWLINE$Please save your work in all running programs and click OK to restart your computer. Setup will resume once your computer restarts.$NEWLINE$$NEWLINE$If you click CANCEL, setup will exit. You will have to run setup again at a later time to install $TITLE$.
      if Variable REBOOTNOW Equals OK
        Reboot Computer and Resume Setup
      else
        Terminate Installation
      end
    end
    Set Variable MAINTENANCE to FALSE
  end
  [compiler end]
  Hide Dialog
end
[END REGION]
 
[END REGION]
 
[DEFINE REGION: Define Setup Globals]
Comment: Define Setup Components
Define Component: Win32\Standalone
Define Component: Win32\COM Server
Define Component: Win32
Define Component: Win64
Define Component: Documents
Define Component: Examples
Define Component: TrainingSlides
 
Comment: Initialize Setup Globals
Get System Setting Windows NT Kernel (NT4, 2000, XP, 2003, Vista, 2008, 7, 2008 R2, 8, Server 8) into ISNT
Get System Setting Windows in 64 bit Mode into IS64
if Variable IS64 Equals TRUE
  Set x64 - Native 64 bit Windows, AMD64 and EM64T Architectures - installation mode
end
Get Folder Location System->Program Files Directory into PROGRAMFILES
Get Common Folder Location System->Program Files Directory into COMMONFILES
Get Common Folder Location Start Menu->Programs Group into SHORTCUTFILESALL
Get Folder Location Start Menu->Programs Group into SHORTCUTFILES
if Variable SHORTCUTFILESALL Equals 
  Set Variable SHORTCUTFILESALL to $SHORTCUTFILES$
end
Get Folder Location System->Desktop Directory into DESKTOPDIR
Get Folder Location System->Windows Directory into WINDIR
Get Folder Location System->System Directory into WINSYSDIR
Get Folder Location Taskbar->Quick Launch Directory into QUICKLAUNCHDIR
Get Folder Location WWW->WWWRoot into WWWROOTDIR
[END REGION]
 
[DEFINE REGION: Setup User Interview]
if Variable MAINTENANCE Equals TRUE
  GoTo Label: Maintenance
else
  [compiler if Variable BUILDMODE not Equals PATCH]
  Comment: First Time Install
  Set Variable TARGETDIR to $PROGRAMFILES$\$TITLE$
  Set Variable STARTMENU to $TITLE$
  [compiler end]
end
 
label: Welcome Dialog
Display Dialog: welcome, wait for dialog to return (modal)
if Variable WIZARD Equals CANCEL
  GoTo Label: Main Install
end
[compiler if Variable BUILDMODE not Equals PATCH]
label: License Check
Display Dialog: licensecheck, wait for dialog to return (modal)
if Variable WIZARD Equals BACK
  GoTo Label: Welcome Dialog
else
  if Variable WIZARD Equals CANCEL
    GoTo Label: Main Install
  end
end
label: ReadMe Information
Display Dialog: readme, wait for dialog to return (modal)
if Variable WIZARD Equals BACK
  GoTo Label: License Check
else
  if Variable WIZARD Equals CANCEL
    GoTo Label: Main Install
  end
end
label: Custom Setup
if Variable IS64 Equals TRUE
  Select Component: Win64
  Select Component: Win32
  Deselect Component: Win32\Standalone
  Select Component: Win32\COM Server
else
  Deselect Component: Win64
  Do not allow user to select or deselect Component: Win64
  Select Component: Win32
  Select Component: Win32\Standalone
  Select Component: Win32\COM Server
end
Display Dialog: componentstree, wait for dialog to return (modal)
if Variable WIZARD Equals BACK
  GoTo Label: ReadMe Information
else
  if Variable WIZARD Equals CANCEL
    GoTo Label: Main Install
  end
end
label: Destination Directory
Display Dialog: destination, wait for dialog to return (modal)
if Variable WIZARD Equals BACK
  GoTo Label: Custom Setup
else
  if Variable WIZARD Equals CANCEL
    GoTo Label: Main Install
  end
end
label: Start Menu
Display Dialog: startmenu, wait for dialog to return (modal)
if Variable WIZARD Equals BACK
  GoTo Label: Destination Directory
else
  if Variable WIZARD Equals CANCEL
    GoTo Label: Main Install
  end
end
[compiler end]
label: Start Installation
Display Dialog: startinstallation, wait for dialog to return (modal)
if Variable WIZARD Equals BACK
  [compiler if Variable BUILDMODE not Equals PATCH]
  GoTo Label: Start Menu
  [compiler else]
  GoTo Label: Welcome Dialog
  [compiler end]
else
  GoTo Label: Main Install
end
 
label: Maintenance
Comment: Maintenance Install/Uninstall
wizard loop
Display Dialog: maintenance, wait for dialog to return (modal)
Display Dialog: componentstree (if variable MODIFY is TRUE), wait for dialog to return (modal)
Display Dialog: startinstallation, wait for dialog to return (modal)
end
[END REGION]
 
[DEFINE REGION: Process (Un)Installation]
label: Main Install
Comment: Exit Setup if Wizard Loop cancelled
if Variable WIZARD Equals CANCEL
  Terminate Installation
end
 
Comment: Prepare to install
Set Variable PROGRESSTEXT to Installing $TITLE$
Set Variable SUCCESS to 
Set Variable LASTERROR to 
if Variable ALLUSERS Equals TRUE
  Set Variable SHORTCUTFOLDER to $SHORTCUTFILESALL$\$STARTMENU$
else
  Set Variable SHORTCUTFOLDER to $SHORTCUTFILES$\$STARTMENU$
end
Display Dialog: progress, use as progress dialog (non-modal)
 
Comment: Modify Target System
[DEFINE REGION: Perform Uninstallation]
if Variable REMOVE Equals TRUE
  Comment: Uninstall product
  Comment: Remove application settings from registry
  Delete Registry KEY HKCU\SOFTWARE\OpenDSS\*.*
  Apply Uninstall (get result into variable SUCCESS)
  Set Variable PROGRESS to 100
else
  [END REGION]
  [DEFINE REGION: Perform First Time or Maintenance Installation]
  Comment: Install/Re-Install product
  Create Shortcut $SHORTCUTFOLDER$\Uninstall #TITLE# to $UNINSTALLLINK$
  [OFFLINE CONTENT]
  Install Files C:\OpenDSS\Distrib\readme.txt to $TARGETDIR$
  Install Files C:\OpenDSS\Distrib\License.txt to $TARGETDIR$
  Write Registry Key HKCU\SOFTWARE\OpenDSS\, 
  [DEFINE WEB MEDIA Win64]
  Get Component Win64 Selection State into Variable SELECTED
  if Variable SELECTED Equals TRUE
    Create Shortcut $SHORTCUTFOLDER$\OpenDSS to $TARGETDIR$\x64\OpenDSS.exe
    Install Files C:\OpenDSS\Distrib\x64\IndMach012a.dll to $TARGETDIR$\x64
    Install Files C:\OpenDSS\Distrib\x64\DSSView.exe to $TARGETDIR$\x64
    Install Files C:\OpenDSS\Distrib\x64\KLUSolve.dll to $TARGETDIR$\x64
    Install Files C:\OpenDSS\Distrib\x64\OpenDSSengine.dll to $TARGETDIR$\x64
    Install Files C:\OpenDSS\Distrib\x64\OpenDSSDirect.dll to $TARGETDIR$\x64
    Install Files C:\OpenDSS\Distrib\x64\OpenDSS.exe to $TARGETDIR$\x64
  end
  [DEFINE WEB MEDIA Documents]
  Get Component Documents Selection State into Variable SELECTED
  if Variable SELECTED Equals TRUE
    Create Shortcut $SHORTCUTFOLDER$\OpenDSS Manual to $TARGETDIR$\Doc\OpenDSSManual.pdf
    Install Files C:\OpenDSS\Distrib\Doc\*.pdf to $TARGETDIR$\Doc, include subfolders
  end
  [DEFINE WEB MEDIA Examples]
  Get Component Examples Selection State into Variable SELECTED
  if Variable SELECTED Equals TRUE
    Install Files C:\OpenDSS\Distrib\IEEETestCases\*.* to $TARGETDIR$\IEEETestCases, include subfolders
    Install Files C:\OpenDSS\Distrib\EPRITestCircuits\*.* to $TARGETDIR$\EPRITestCircuits, include subfolders
    Install Files C:\OpenDSS\Distrib\Examples\*.* to $TARGETDIR$\Examples, include subfolders
  end
  [DEFINE WEB MEDIA Win32]
  Get Component Win32 Selection State into Variable SELECTED
  if Variable SELECTED Equals TRUE
    Install Files C:\OpenDSS\Distrib\x86\IndMach012a.dll to $TARGETDIR$\x86
    Install Files C:\OpenDSS\Distrib\x86\KLUSolve.dll to $TARGETDIR$\x86
    Install Files C:\OpenDSS\Distrib\x86\DSSView.exe to $TARGETDIR$\x86
    Install Files C:\OpenDSS\Distrib\x86\OpenDSSDirect.dll to $TARGETDIR$\x86
  end
  [DEFINE WEB MEDIA COM Server]
  Get Component Win32\COM Server Selection State into Variable SELECTED
  if Variable SELECTED Equals TRUE
    Install Files C:\OpenDSS\Distrib\x86\OpenDSSengine.dll to $TARGETDIR$\x86
  end
  [DEFINE WEB MEDIA Standalone]
  Get Component Win32\Standalone Selection State into Variable SELECTED
  if Variable SELECTED Equals TRUE
    Create Shortcut $SHORTCUTFOLDER$\OpenDSS to $TARGETDIR$\x86\OpenDSS.exe
    Install Files C:\OpenDSS\Distrib\x86\OpenDSS.exe to $TARGETDIR$\x86
  end
  [DEFINE WEB MEDIA TrainingSlides]
  Get Component TrainingSlides Selection State into Variable SELECTED
  if Variable SELECTED Equals TRUE
    Create Shortcut $SHORTCUTFOLDER$\Training Slides to $TARGETDIR$\Training\AtlantaWorkshop.pdf
    Install Files C:\OpenDSS\Distrib\Training\*.pdf to $TARGETDIR$\Training, include subfolders
  end
  Comment: TO-DO: Insert any additional install commands here
  [compiler if Variable BUILDMODE Equals PATCH]
  Apply Patch (get result into variable SUCCESS)
  [compiler else]
  if Variable ADVERTISE Equals TRUE
    Apply Advertised (get result into variable SUCCESS)
  else
    Create Folder $TARGETDIR$\x64
    Create Folder $TARGETDIR$\x86
    Apply Install (get result into variable SUCCESS)
  end
  [compiler end]
  Set Variable PROGRESS to 100
end
[END REGION]
[END REGION]
 
[DEFINE REGION: Finish Setup]
Comment: End of Installation
Hide Dialog
Display Dialog: finish, wait for dialog to return (modal)
if Variable SILENT Equals FALSE
  if Variable REBOOTCOMPUTER Equals TRUE
    if Variable SUCCESS Equals REBOOT
      Reboot Computer
    end
  end
  if Variable RUNAPP Equals TRUE
    if Variable REMOVE Equals FALSE
      if Variable SUCCESS Equals COMPLETE
        Get Component Win64 Selection State into Variable SELECTED
        if Variable SELECTED Equals TRUE
          Run Program $TARGETDIR$\x64\OpenDSS.exe 
        else
          Run Program $TARGETDIR$\x86\OpenDSS.exe 
        end
      end
    end
  end
end
[END REGION]
 
